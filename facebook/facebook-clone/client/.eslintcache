[{"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/index.js":"1","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/App.js":"2","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/reportWebVitals.js":"3","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/index.js":"4","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Index/Index.js":"5","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Register/Register.js":"6","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Friends/Friends.js":"7","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Home/Home.js":"8","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Profile/Profile.js":"9","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Home/Home.components.js":"10","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/index.js":"11","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Navbar/Navbar.js":"12","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Navbar/Navbar.components.js":"13","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/PostForm/PostForm.js":"14","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/PostForm/PostForm.components.js":"15","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Profile/Profile.components.js":"16","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Comment/Comment.js":"17","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/CommentForm/CommentForm.js":"18","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/ReplyForm/ReplyForm.js":"19","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Post/Post.js":"20","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/LoadingOverlay/LoadingOverlay.js":"21","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/ImageForm/ImageForm.js":"22","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Comment/Comment.components.js":"23","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/CommentForm/CommentForm.components.js":"24","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/ReplyForm/ReplyForm.components.js":"25","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Post/Post.components.js":"26","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/LoadingOverlay/LoadingOverlay.components.js":"27","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/ImageForm/ImageForm.components.js":"28","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/PostPage/PostPage.js":"29","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Notification/Notification.js":"30","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/UserList/UserList.js":"31","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Reply/Reply.js":"32","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendRequest/FriendRequest.js":"33","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendRequest/FriendRequest.components.js":"34","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Notification/Notification.components.js":"35","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Reply/Reply.components.js":"36","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendSuggestion/FriendSuggestion.js":"37","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendSuggestion/FriendSuggestion.components.js":"38","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/ProtectedRoute/ProtectedRoute.js":"39","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/FacebookLogin/FacebookLogin.js":"40","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Register/Register.components.js":"41","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Index/Index.components.js":"42","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/LikesModal/LikesModal.js":"43","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/LikesModal/LikesModal.components.js":"44","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Photos/Photos.js":"45","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/ProfileFriends/ProfileFriends.js":"46","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Photos/Photos.components.js":"47","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Photo/Photo.js":"48","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendsProfile/FriendsProfile.js":"49","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Photo/Photo.components.js":"50","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendsProfile/FriendsProfile.components.js":"51"},{"size":809,"mtime":1609639669178,"results":"52","hashOfConfig":"53"},{"size":2654,"mtime":1609850816106,"results":"54","hashOfConfig":"53"},{"size":364,"mtime":1608315853302,"results":"55","hashOfConfig":"53"},{"size":606,"mtime":1609783290549,"results":"56","hashOfConfig":"53"},{"size":3628,"mtime":1609639650243,"results":"57","hashOfConfig":"53"},{"size":3465,"mtime":1609788018077,"results":"58","hashOfConfig":"53"},{"size":4669,"mtime":1609639650241,"results":"59","hashOfConfig":"53"},{"size":3035,"mtime":1609639650242,"results":"60","hashOfConfig":"53"},{"size":10168,"mtime":1609783290546,"results":"61","hashOfConfig":"53"},{"size":924,"mtime":1609783290544,"results":"62","hashOfConfig":"53"},{"size":1011,"mtime":1609783290544,"results":"63","hashOfConfig":"53"},{"size":11627,"mtime":1609788515378,"results":"64","hashOfConfig":"53"},{"size":4026,"mtime":1609788705511,"results":"65","hashOfConfig":"53"},{"size":3868,"mtime":1609639650238,"results":"66","hashOfConfig":"53"},{"size":486,"mtime":1608315853282,"results":"67","hashOfConfig":"53"},{"size":3600,"mtime":1609783290546,"results":"68","hashOfConfig":"53"},{"size":8195,"mtime":1609639650231,"results":"69","hashOfConfig":"53"},{"size":2935,"mtime":1609639650231,"results":"70","hashOfConfig":"53"},{"size":3144,"mtime":1609639650240,"results":"71","hashOfConfig":"53"},{"size":9499,"mtime":1609641739496,"results":"72","hashOfConfig":"53"},{"size":385,"mtime":1608830667157,"results":"73","hashOfConfig":"53"},{"size":2274,"mtime":1608830667156,"results":"74","hashOfConfig":"53"},{"size":1150,"mtime":1608315853263,"results":"75","hashOfConfig":"53"},{"size":522,"mtime":1608315853270,"results":"76","hashOfConfig":"53"},{"size":409,"mtime":1608315853287,"results":"77","hashOfConfig":"53"},{"size":2562,"mtime":1608315853278,"results":"78","hashOfConfig":"53"},{"size":247,"mtime":1608319354036,"results":"79","hashOfConfig":"53"},{"size":212,"mtime":1608315853274,"results":"80","hashOfConfig":"53"},{"size":1219,"mtime":1609639650243,"results":"81","hashOfConfig":"53"},{"size":1429,"mtime":1608830667158,"results":"82","hashOfConfig":"53"},{"size":302,"mtime":1608315853289,"results":"83","hashOfConfig":"53"},{"size":5272,"mtime":1609639650239,"results":"84","hashOfConfig":"53"},{"size":967,"mtime":1609639650232,"results":"85","hashOfConfig":"53"},{"size":385,"mtime":1608315853271,"results":"86","hashOfConfig":"53"},{"size":885,"mtime":1608334587414,"results":"87","hashOfConfig":"53"},{"size":1142,"mtime":1608315853284,"results":"88","hashOfConfig":"53"},{"size":777,"mtime":1609639650233,"results":"89","hashOfConfig":"53"},{"size":385,"mtime":1608315853272,"results":"90","hashOfConfig":"53"},{"size":558,"mtime":1608315853298,"results":"91","hashOfConfig":"53"},{"size":214,"mtime":1608830949777,"results":"92","hashOfConfig":"53"},{"size":233,"mtime":1609639650244,"results":"93","hashOfConfig":"53"},{"size":253,"mtime":1609639650242,"results":"94","hashOfConfig":"53"},{"size":721,"mtime":1609642056237,"results":"95","hashOfConfig":"53"},{"size":990,"mtime":1609642314781,"results":"96","hashOfConfig":"53"},{"size":422,"mtime":1609783290545,"results":"97","hashOfConfig":"53"},{"size":97,"mtime":1609783290547,"results":"98","hashOfConfig":"53"},{"size":232,"mtime":1609783290545,"results":"99","hashOfConfig":"53"},{"size":233,"mtime":1609783290544,"results":"100","hashOfConfig":"53"},{"size":923,"mtime":1609783290542,"results":"101","hashOfConfig":"53"},{"size":190,"mtime":1609783290543,"results":"102","hashOfConfig":"53"},{"size":521,"mtime":1609783290542,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"afs1fk",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/index.js",[],["226","227"],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/App.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/reportWebVitals.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/index.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Index/Index.js",["228","229","230"],"import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Container, Form, Input, Label, Button, FormGroup } from \"reactstrap\";\nimport { FlashMessage } from './Index.components'\nimport { CSSTransition } from 'react-transition-group';\nimport { LoadingOverlay } from '../../Components';\n\nconst Index = ({getUser, user }) => {\n  const location = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(undefined)\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    Axios.post(\"/login\", { email, password })\n      .then((res) => {\n        localStorage.setItem('token', res.data.token);\n        getUser(res.data.token);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setMessage(err.response.data.message)\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (user && localStorage.getItem('token')) location.push(\"/home\");\n  }, [user]);\n\n  useEffect(() => {\n    if(message) {\n      setTimeout(() => {\n        setMessage(undefined);\n      }, 3000)\n    }\n  }, [message])\n\n  return (\n    <Container id=\"index-main\">\n      <CSSTransition\n        in={loading}\n        timeout={300}\n        classNames='fade'\n        unmountOnExit\n      >\n        <LoadingOverlay />\n      </CSSTransition>\n      <CSSTransition\n        in={message}\n        timeout={300}\n        classNames='fade'\n        unmountOnExit\n      >\n        <FlashMessage>{message}</FlashMessage>\n      </CSSTransition>\n      <div id=\"facebook-story\">\n        <img\n          id=\"fb-logo\"\n          src=\"https://static.xx.fbcdn.net/rsrc.php/y8/r/dF5SId3UHWd.svg\"\n        />\n        <p>Connect with friends and the world around you on Facebook.</p>\n      </div>\n      <div id=\"index-login\">\n        <Form onSubmit={(e) => submitHandler(e)}>\n          <FormGroup>\n            <Input\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n              placeholder=\"Email\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n              placeholder=\"********\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Button\n              style={{ fontSize: \"20px\" }}\n              color=\"primary\"\n              className=\"font-weight-bold py-2 w-100\"\n            >\n              Log In\n            </Button>\n          </FormGroup>\n        </Form>\n        <div className='d-flex align-items-center justify-content-between'>\n          <hr className='w-100'/>\n          <p className='mb-1 mx-2'>or</p>\n          <hr className='w-100'/>\n        </div>\n        <Container className=\"w-75\">\n          <Link to=\"/register\">\n            <Button className=\"w-100 py-2 font-weight-bold\" color=\"success\">\n              Create New Account\n            </Button>\n          </Link>\n        </Container>\n        <div className='d-flex align-items-center justify-content-between'>\n          <hr className='w-100'/>\n          <p className='mb-1 mx-2'>or</p>\n          <hr className='w-100'/>\n        </div>\n        <div className='text-center mt-2'>\n          <a href={process.env.NODE_ENV === 'development' ? 'http://localhost:5000/auth/facebook' : 'https://mernfb.herokuapp.com/auth/facebook'}>\n            <Button color='primary'>Login with Facebook</Button>\n          </a>\n        </div>\n\n      </div>\n    </Container>\n  );\n};\n\nexport default Index;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Register/Register.js",["231"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Input, Label, FormGroup, Button } from \"reactstrap\";\nimport { FlashMessage } from \"./Register.components\";\nimport { CSSTransition } from 'react-transition-group';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Register = ({ user, reloadUser, getUser }) => {\n  const location = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPass, setConfirmPass] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [message, setMessage] = useState(undefined);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPass) {\n      setMessage('Passwords do not match');\n      return;\n    }\n    axios\n      .post(\"/register\", {\n        email,\n        password,\n        first_name: firstName,\n        last_name: lastName,\n      })\n      .then((res) => {\n        localStorage.setItem('token', res.data);\n        getUser(res.data);\n        location.push('/');\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setMessage(err.response.data.message);\n      });\n  };\n\n  useEffect(() => {\n    if (user) location.push(\"/home\");\n  }, [user]);\n\n  // Clear message after 3s\n  useEffect(() => {\n    setTimeout(() => {\n      if(message) setMessage(undefined);\n    }, 3000)\n    \n  }, [message])\n\n  return (\n    <Container style={{ width: \"600px\", paddingTop: \"60px\", minHeight: '100vh' }}>\n      <Link to='/'>Back</Link>\n      <h3 className=\"text-center\">Register</h3>\n      <CSSTransition\n        in={message}\n        timeout={300}\n        classNames='fade'\n        unmountOnExit\n      >\n        <FlashMessage>{message}</FlashMessage>\n      </CSSTransition>\n      <Form onSubmit={(e) => submitHandler(e)}>\n        <FormGroup>\n          <Label for=\"email\">Email</Label>\n          <Input\n            type=\"email\"\n            placeholder=\"Email..\"\n            name=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"first_name\">First Name</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"First Name..\"\n            name=\"first_name\"\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"last_name\">Last Name</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            name=\"last_name\"\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            placeholder=\"********\"\n            name=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"password_conf\">Password confirmation</Label>\n          <Input\n            type=\"password\"\n            placeholder=\"********\"\n            name=\"password_conf\"\n            onChange={(e) => setConfirmPass(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup className=\"text-center\">\n          <Button type=\"submit\" color=\"primary\">\n            Register\n          </Button>\n        </FormGroup>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Register;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Friends/Friends.js",["232","233","234","235","236"],"import { useState, useEffect } from \"react\";\nimport { Navbar } from \"../../Components\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport { Profile } from \"../../Pages/\";\nimport {\n  FriendRequest,\n  LoadingOverlay,\n  FriendSuggestion,\n} from \"../../Components\";\nimport Axios from \"axios\";\n\nconst Friends = ({reloadUser, user, setUser }) => {\n  const [suggestions, setSuggestions] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [previewUserPosts, setPreviewUserPosts] = useState([]);\n  const [previewUser, setPreviewUser] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  const [sentRequests, setSentRequests] = useState([])\n  const [receivedRequests, setReceivedRequests] = useState([])\n\n  const config = localStorage.getItem('token') &&  {\n    headers: {\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n\n  const clickHandler = (id) => {\n    //e.stopPropagation();\n    Axios.get(`/users/${id}`).then((res) => {\n      setPreviewUser(res.data);\n    });\n  };\n\n /* Friend request logic functions */\n const sendRequest = (to) => {\n  //const to = e.target.getAttribute('data-id');\n  Axios.post(`/friend_requests/${to}/send`, {}, config).then((res) => {\n    console.log(res.data);\n    setSuggestions(\n      suggestions.filter((suggestion) => suggestion._id !== res.data.to._id)\n    );\n    setRequests([...requests, res.data]);\n  });\n};\n\n  const confirmFriend = (_id) => {\n    //const _id = e.target.getAttribute('data-id');\n    Axios.post(`/friend_requests/${_id}/accept`).then((res) => {\n      setRequests(requests.filter((request) => request._id !== res.data._id));\n      reloadUser();\n    });\n  };\n\n  const declineFriend = (_id) => {\n    //const _id = e.target.getAttribute('data-id');\n    Axios.post(`/friend_requests/${_id}/decline`).then((res) => {\n      setRequests(requests.filter((request) => request._id !== res.data._id));\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    Promise.all([\n      \n      Axios.get(\"/friend_requests/recommendations\", config),\n      Axios.get('/friend_requests', config),\n      Axios.get('/posts')\n    ]).then((results) => {\n      setSuggestions(results[0].data);\n      setRequests(results[1].data);\n      setPosts(results[2].data);\n      setLoading(false)\n    });\n  }, []);\n\n  // when previewUser changes we change the posts to match theirs\n  useEffect(() => {\n    if (previewUser) {\n      setPreviewUserPosts(\n        posts.filter((post) => post.user._id === previewUser._id)\n      );\n    }\n  }, [previewUser]);\n\n  // filter sent and received requests whenever the requests array changes\n  useEffect(() => {\n    setSentRequests(requests\n      .filter((request) => request.from._id === user._id))\n    setReceivedRequests(requests\n      .filter((request) => request.to._id === user._id))\n  }, [requests])\n\n  return (\n    <Container fluid className=\"px-0\">\n      {/* Loading overlay */}\n      {loading && <LoadingOverlay />}\n      <Navbar key=\"friends\" setUser={setUser} reloadUser={reloadUser} user={user} />\n      <Row className=\"p-0 m-0\" style={{ height: \"auto\" }}>\n        <Col\n          id=\"friends-col\"\n          className=\"d-none d-md-block box-shadow-right p-0 px-2\"\n          md=\"4\"\n          lg='3'\n          style={{ background: \"white\" }}\n        >\n          <h2>Friends</h2>\n          <h5>{receivedRequests.length} Friend Requests</h5>\n          <hr className=\"my-1\"></hr>\n          {/* Friend Requests */}\n          {receivedRequests.map((request) => (\n            <FriendRequest\n              onClick={clickHandler}\n              _id={request._id}\n              confirmFriend={confirmFriend}\n              declineFriend={declineFriend}\n              key={request._id}\n              from={request.from}\n            />\n          ))}\n          <h5>People you may know</h5>\n          <hr className=\"my-1\"></hr>\n          {/* Friend Suggestions */}\n          {suggestions.map((to) => (\n            <FriendSuggestion\n              onClick={clickHandler}\n              sendRequest={sendRequest}\n              key={to._id}\n              to={to}\n            />\n          ))}\n        </Col>\n        <Col id=\"friends-profile\" className=\"p-0\">\n          {previewUser && (\n            <Profile\n              showNav={false}\n              user={user}\n              posts={previewUserPosts}\n              setPosts={setPreviewUserPosts}\n              profileUser={previewUser}\n              requests={requests}\n              setRequests={setRequests}\n              reloadUser={reloadUser}\n            />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Friends;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Home/Home.js",["237","238"],"import { useEffect, useState, useRef} from 'react';\nimport axios from 'axios';\nimport { Container, Row, Col } from \"reactstrap\";\nimport { NavItem, RoundImage, NoPostsDiv, FakeLink } from \"./Home.components\";\nimport { Navbar, PostForm, Post, LoadingOverlay } from \"../../Components\";\nimport { Link } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { FaUserFriends } from \"react-icons/fa\";\n\n\nconst Home = ({setUser, reloadUser, user }) => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  \n  const postInput = document.querySelector('#post_input_form');\n\n  useEffect(() => {\n    axios.get('/posts')\n    .then(res => {\n      setLoading(false);\n      const postIDs = user.friends.map(friend => friend._id);\n      postIDs.push(user._id);\n      setPosts(res.data.filter(post => postIDs.includes(post.user._id)));\n    })\n  }, [])\n\n  return (\n    <Container fluid className=\"px-0\">\n      <CSSTransition\n        in={loading}\n        timeout={300}\n        classNames='fade'\n        unmountOnExit\n      >\n        <LoadingOverlay />\n      </CSSTransition>\n      <Navbar key=\"home\" setUser={setUser} posts={posts} reloadUser={reloadUser} setPosts={setPosts} user={user} />\n      <Row className=\"mx-0\">\n        <Col id=\"left-col\" className=\"p-2 d-none d-lg-block\" sm=\"3\" lg=\"3\">\n          <NavItem to=\"/profile\">\n            <RoundImage src={user.profile_photo} />\n            &nbsp;{user.display_name || user.first_name + \" \" + user.last_name}\n          </NavItem>\n          <NavItem to=\"/friends\">\n            <FaUserFriends size={36} fill=\"royalblue\" />\n            &nbsp;Friends\n          </NavItem>\n        </Col>\n        <Col id=\"mid-col\" sm=\"12\" md=\"8\" lg=\"6\">\n          <PostForm posts={posts} setPosts={setPosts} user={user} />\n          {posts.map((post) => (\n            <Post\n              key={post._id}\n              user={user}\n              setPosts={setPosts}\n              posts={posts}\n              post={post}\n            />\n          ))}\n          {\n            !posts.length &&\n            <NoPostsDiv>\n              <p style={{display: 'inline-block'}} className='mb-0'>No posts yet. Find <Link style={{color: 'royalblue'}} to='/friends'>Friends</Link> or</p>\n              <FakeLink onClick={() => postInput.focus()}>&nbsp;create a post!</FakeLink>\n            </NoPostsDiv>\n          }\n        </Col>\n        <Col\n          id=\"right-col\"\n          sm=\"5\"\n          md=\"4\"\n          lg=\"3\"\n          className=\"d-none d-md-block\"\n        >\n          <h5 style={{ color: \"darkgray\" }}>Contacts</h5>\n          <hr className=\"my-2\" style={{ backgroundColor: \"lightgray\" }}></hr>\n          {user.friends.map((friend) => (\n            <NavItem to={`/users/${friend._id}`}>\n              <RoundImage src={friend.profile_photo} />\n              &nbsp;\n              {friend.display_name || friend.first_name + \" \" + friend.last_name}\n            </NavItem>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Profile/Profile.js",["239","240","241","242"],"import { Container, Col, Button } from \"reactstrap\";\nimport { Navbar } from \"../../Components\";\nimport {\n  CoverPhoto,\n  ProfilePhoto,\n  ProfilePhotoWrapper,\n  ProfileSection,\n  ProfileHeader,\n  ProfileNav,\n  NavItem,\n  Main,\n  DefaultCoverPhoto,\n  ChangeProfilePhoto,\n  GrayHoverDiv,\n  FlexDivGray,\n  Option,\n  CollapseDiv,\n  PhotosContainer,\n  WhiteContainer\n} from \"./Profile.components\";\nimport { Post, PostForm, ImageForm, FriendsProfile, LoadingOverlay } from \"../../Components\";\nimport { Photos } from '../../Pages'\nimport { CSSTransition } from 'react-transition-group';\nimport { useEffect, useState } from \"react\";\nimport { AiFillCamera } from \"react-icons/ai\";\nimport Axios from  'axios';\nimport { FaCheck } from \"react-icons/fa\";\nimport async from 'async'\nimport { useParams } from 'react-router-dom';\n\nconst Profile = ({\n  profileUser = undefined,\n  showNav = true,\n  user,\n  reloadUser,\n  users,\n  setUser\n}) => {\n\n  const { user_id } = useParams();\n\n  const [subPage, setSubPage] = useState('main');\n  const [currentUser, setCurrentUser] = useState(profileUser || user)\n  const [requests, setRequests] = useState([])\n  const [posts, setPosts] = useState([]);\n  const [coverPhotoForm, setCoverPhotoForm] = useState(false);\n  const [profilePhotoForm, setProfilePhotoForm] = useState(false);\n  const [collapse, setCollapse] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [photos, setPhotos] = useState([]);\n\n  // Friendship status state\n  const [sameUser, setSameUser] = useState(false);\n  const [isFriends, setIsFriends] = useState(false);\n  const [sentRequest, setSentRequest] = useState(undefined)\n  const [receivedRequest, setReceivedRequest] = useState(undefined)\n  \n\n  const config = localStorage.getItem('token') &&  {\n    headers: {\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n\n\n  const checkIsFriend = () => {\n    const userFriendsIDs = user.friends.map(friend => friend._id)\n    return (userFriendsIDs.includes(currentUser._id));\n  }\n\n  /* Friend request logic functions */\n  const sendRequest = (to) => {\n    //const to = e.target.getAttribute('data-id');\n    Axios.post(`/friend_requests/${to}/send`, {}, config).then((res) => {\n      setRequests([...requests, res.data]);\n      setSentRequest(res.data._id);\n    });\n  };\n\n  const confirmFriend = (_id) => {\n    //const _id = e.target.getAttribute('data-id');\n    Axios.post(`/friend_requests/${_id}/accept`).then((res) => {\n      reloadUser();\n      const updatedUser = currentUser;\n      updatedUser.friends.push(user);\n      setCurrentUser(updatedUser);\n      setReceivedRequest(undefined);\n    });\n  };\n\n  const declineFriend = (_id) => {\n    //const _id = e.target.getAttribute('data-id');\n    Axios.post(`/friend_requests/${_id}/decline`).then((res) => {\n      setRequests(requests.filter((request) => request._id !== res.data._id));\n      setReceivedRequest(undefined);\n    });\n  };\n\n  const deleteFriend = (user_id) => {\n    Axios.delete(`/friend_requests/${user_id}/delete`, config).then((res) => {\n      reloadUser();\n      setIsFriends(false);\n      setSentRequest(undefined);\n      setReceivedRequest(undefined)\n    })\n  }\n\n  // filter sent and received requests whenever the requests array changes\n  useEffect(() => {\n    async.series([\n      function(callback) {\n        const sent = (requests\n          .filter((request) => request.from._id === user._id))\n        callback(null, sent)\n      },\n      function(callback) {\n        const received = (requests\n          .filter((request) => request.to._id === user._id))\n        callback(null, received);\n      }\n    ], (err, results) => {\n      setSentRequest(results[0].find(req => req.to._id === currentUser._id));\n      setReceivedRequest(results[1].find(req => req.from._id === currentUser._id));\n    })\n    \n  }, [requests])\n\n  \n  useEffect(() => {\n    setLoading(true);\n    // Set profile user\n    if(user_id) {\n      // Set current user based on url\n      Axios.get(`/users/${user_id}`)\n      .then(res => {\n        console.log(currentUser, res.data);\n        if(currentUser._id !== res.data._id) setCurrentUser(res.data);\n      })\n    }\n\n    // Fetch posts\n    Axios.get('/posts')\n    .then(res => {\n      setPosts(res.data.filter(post => post.user._id === currentUser._id));\n      setLoading(false);\n\n    })\n    // Fetch requests\n    Axios.get('/friend_requests', config)\n    .then(res => {\n      setRequests(res.data);\n      setLoading(false);\n    })\n    .catch(err => console.log(err))\n\n    // Reload the page\n    setSubPage('main');\n  }, [currentUser])\n\n  useEffect(() => {\n    setSameUser(currentUser._id === user._id);\n    // Establish friendship status\n    setIsFriends(checkIsFriend())\n  }, [currentUser, user])\n\n  // Get posts with photos\n  useEffect(() => {\n    setPhotos(posts.map(post => post.image ? post : ''));\n  }, [posts])\n\n\n  useEffect(() => {\n    if(profileUser) setCurrentUser(profileUser);\n  }, [profileUser])\n\n  return currentUser && (\n    <Container fluid className=\"p-0\">\n      <CSSTransition\n        in={loading}\n        timeout={300}\n        classNames='fade'\n        unmountOnExit\n      >\n        <LoadingOverlay />\n      </CSSTransition>\n      {profilePhotoForm && (\n        <ImageForm\n          path={`/${user._id}/profile_photo`}\n          reloadUser={reloadUser}\n          resources={user}\n          setImageForm={setProfilePhotoForm}\n        />\n      )}\n      {coverPhotoForm && (\n        <ImageForm\n          path={`/${user._id}/cover_photo`}\n          reloadUser={reloadUser}\n          resources={user}\n          setImageForm={setCoverPhotoForm}\n        />\n      )}\n      <div style={{ background: \"white\" }}>\n        {showNav && <Navbar key=\"profile\" setUser={setUser} users={users} user={user} reloadUser={reloadUser}/>}\n        <ProfileSection className=\"px-0\">\n          {currentUser.cover_photo ? (\n            <a href={user.cover_photo}>\n              <CoverPhoto src={currentUser.cover_photo}></CoverPhoto>\n            </a>\n          ) : (\n            <DefaultCoverPhoto></DefaultCoverPhoto>\n          )}\n          {sameUser && (\n            <GrayHoverDiv onClick={() => setCoverPhotoForm(true)}>\n              <p className=\"mb-0\">Change Cover Photo</p>\n            </GrayHoverDiv>\n          )}\n          {isFriends && (\n            <GrayHoverDiv\n              data-id={currentUser._id}\n              onClick={() => setCollapse(!collapse)}\n            >\n              <p className=\"mb-0\">\n                <FaCheck /> Friends\n              </p>\n              {/* Collapsed div for friend options */}\n              {collapse && \n                <CollapseDiv>\n                  <Option onClick={() => deleteFriend(currentUser._id)}>Remove Friend</Option>\n                </CollapseDiv>\n              }\n            </GrayHoverDiv>\n          )}\n          {receivedRequest && (\n            <FlexDivGray>\n              <p className=\"mb-1\">\n                {currentUser.display_name ||\n                  currentUser.first_name + \" \" + currentUser.last_name}{\" \"}\n                has sent you a friend request\n              </p>\n              <div className=\"d-block\">\n                <Button onClick={() => confirmFriend(receivedRequest._id)} className=\"mr-2\" color=\"success\">\n                  Confirm\n                </Button>\n                <Button  onClick={() => declineFriend(receivedRequest._id)} color=\"danger\">\n                  Delete\n                </Button>\n              </div>\n\n            </FlexDivGray>\n          )}\n          {sentRequest && (\n            <GrayHoverDiv>\n              <p className=\"mb-0\">\n                <FaCheck /> Sent Friend Request\n              </p>\n            </GrayHoverDiv>\n          )}\n          {!sentRequest && !receivedRequest && !sameUser && !isFriends && (\n            <GrayHoverDiv onClick={() => sendRequest(currentUser._id)}>\n              <p className=\"mb-0\">Send Friend Request</p>\n            </GrayHoverDiv>\n          )}\n          <ProfilePhotoWrapper>\n            <a href={currentUser.profile_photo}>\n              <ProfilePhoto src={currentUser.profile_photo}></ProfilePhoto>\n            </a>\n            {currentUser._id === user._id && (\n              <ChangeProfilePhoto onClick={() => setProfilePhotoForm(true)}>\n                <AiFillCamera fill=\"black\" size={24} />\n              </ChangeProfilePhoto>\n            )}\n          </ProfilePhotoWrapper>\n        </ProfileSection>\n        <h1 className=\"text-center\">\n          {currentUser.display_name ||\n            currentUser.first_name + \" \" + currentUser.last_name}\n        </h1>\n        <ProfileHeader>\n          <hr className=\"my-2\" />\n          <ProfileNav>\n            <NavItem onClick = {() => setSubPage('main')} active={subPage === 'main'}>Posts</NavItem>\n            <NavItem onClick = {() => setSubPage('photos')} active={subPage ==='photos'}>Photos</NavItem>\n            <NavItem onClick= {() => setSubPage('friends')} active={subPage ==='friends'}>Friends</NavItem>\n          </ProfileNav>\n        </ProfileHeader>\n      </div>\n      {\n        subPage === 'main' &&\n        <Main>\n          <Col className=\"pt-3 d-none d-lg-block\" sm=\"5\">\n            <p className='font-weight-bold mb-0'>Photos</p>\n            <Photos user={currentUser} photos={photos} />\n          </Col>\n          <Col className=\"pt-3\">\n            {currentUser._id === user._id && (\n              <PostForm posts={posts} setPosts={setPosts} user={user} />\n            )}\n            {currentUser !== user && <p className='font-weight-bold mb-0'>Posts</p>}\n            {\n\n            }\n            {\n              !posts.length &&\n              <WhiteContainer className='mt-2'>\n                <p>No Posts available</p>\n              </WhiteContainer>\n            }\n            {posts.map((post) => (\n              <Post key={post._id} user={user} posts={posts} post={post} setPosts={setPosts} />\n            ))}\n          </Col>\n        </Main>\n      }\n      {\n        subPage === 'photos' && \n        <Photos user={currentUser} photos={photos} />\n      }\n      {\n        subPage === 'friends' && \n        <FriendsProfile user={user} currentUser={currentUser} />\n      }\n\n      \n    </Container>\n  );\n};\n\nexport default Profile;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Home/Home.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/index.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Navbar/Navbar.js",["243","244","245","246","247"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Nav, Button, Col, Input } from \"reactstrap\";\nimport {\n  NavMidItem,\n  RoundWrapper,\n  CollapsableDiv,\n  RoundImage,\n  GrayHover,\n  LinkGreyHover,\n  RoundedUserDiv,\n  TopRightUserImg,\n  RegularLink,\n  NewNotifications,\n  MenuIcon,\n  SearchContainer,\n  SearchResult,\n  SmallRoundImg,\n  Menu,\n  LockedOverlay,\n  NewFriendsNotifications,\n  FlexDiv,\n  DeleteAccountDiv,\n  Warning\n} from \"./Navbar.components\";\n/* React Icons */\nimport {\n  FaFacebook,\n  FaUserFriends,\n  FaFacebookMessenger,\n  FaDoorOpen,\n} from \"react-icons/fa\";\nimport {\n  AiOutlineSearch,\n  AiFillHome,\n  AiOutlineHome,\n  AiFillBell,\n  AiFillLock,\n  AiFillDelete,\n  AiFillWarning\n\n} from \"react-icons/ai\";\nimport { GrAdd } from \"react-icons/gr\";\nimport { GoTriangleDown } from \"react-icons/go\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Notification } from \"..\";\n\nconst Navbar = ({setUser, reloadUser, user }) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const config = localStorage.getItem('token') &&  {\n    headers: {\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n\n\n  const fullname = (user) => {\n    return user.display_name || user.first_name + ' ' + user.last_name\n  }\n\n  const [users, setUsers] = useState([]);\n  const [menu, setMenu] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n  const [searchDropdown, setSearchDropdown] = useState(false);\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [userDropdown, setUserDropdown] = useState(false);\n  const [warning, setWarning] = useState(false);\n  const [notificationDropdown, setNotificationDropdown] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [newNotifications, setNewNotifications] = useState([]);\n  const [newRequests, setNewRequests] = useState([])\n\n  const clearNotifications = () => {\n    axios.delete('/notifications', config)\n    .then(res => {\n      setNotifications([]);\n    })\n  }\n\n  const deleteAccount = () => {\n    window.confirm('Are you sure you want to delete your account? This action cannot be undone!') &&\n    axios.delete('/users', config)\n    .then(res => {\n      localStorage.removeItem('token');\n      setUser(undefined);\n    })\n  }\n\n  const logoutHandler = () => {\n    // delete the token\n    localStorage.removeItem('token');\n    setUser(undefined);\n    // delete the cookie if there's any\n    document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    history.push('/');\n  };\n\n  useEffect(() => {\n    // Get Notification\n    axios\n    .get(`/notifications`, config)\n    .then((res) => {\n      setNotifications(res.data);\n    })\n    .catch((err) => console.log(err));\n    \n    // Get Users\n    axios.get('/users')\n    .then(res => {\n      setUsers(res.data);\n    })\n\n  }, []);\n\n    useEffect(() => {\n    // Get new friend requests\n    axios.get('/friend_requests', config)\n    .then(res => {\n      \n      setNewRequests(res.data.filter(request => request.to._id === user._id))\n    })\n  }, [])\n\n  useEffect(() => {\n    setNewNotifications(\n      notifications.filter((notification) => notification.clicked !== true)\n    );\n  }, [notifications]);\n\n  useEffect(() => {\n    // search logic\n    if(query.length) {\n      setSearchDropdown(true);\n      setResults(users.filter(user => fullname(user).toLowerCase().includes(query.toLowerCase())))\n    } else {\n      setSearchDropdown(false);\n\n    }\n  }, [query])\n\n  return (\n    <Nav className=\"sticky-top px-1\">\n      <Col className=\"align-items-center d-flex position-relative\">\n        {!showSearch && (\n          <Link className='d-none d-md-block' to=\"/home\">\n            <FaFacebook className=\"mr-2\" fill=\"royalblue\" size={40} />\n          </Link>\n        )}\n        {!showSearch && (\n          <RoundWrapper onClick={() => setShowSearch(true)}>\n            <AiOutlineSearch size={20} />\n          </RoundWrapper>\n        )}\n        {showSearch && (\n          <div className=\"d-flex align-items-center\">\n            <RoundWrapper\n              className=\"mr-2 px-2\"\n              onClick={() => setShowSearch(false)}\n            >\n              <BsArrowLeft size={16} />\n            </RoundWrapper>\n            <Input\n              style={{ borderRadius: \"21px\" }}\n              type=\"text\"\n              className=\"py-2\"\n              style={{width: '90%'}}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Search Facebook\"\n            />\n          </div>\n        )}\n          <CSSTransition\n            in={searchDropdown && showSearch}\n            timeout={300}\n            classNames='fade'\n            unmountOnExit\n          >\n            <SearchContainer>\n              {results.map(result => \n                <Link to={`/users/${result._id}`}>\n                  <SearchResult>\n                    <SmallRoundImg className='mr-2' src={result.profile_photo}></SmallRoundImg>\n                    <p className='mb-0'>{fullname(result)}</p>\n                  </SearchResult>\n                </Link>\n                )}\n            </SearchContainer>\n          </CSSTransition>\n      </Col>\n\n      {/** >768px */}\n      <Col sm=\"5\" id=\"nav-mid\" className=\"d-flex align-items-center\">\n        <NavMidItem\n          to=\"/home\"\n          active={location.pathname === \"/home\"}\n          className=\"mid-nav-item\"\n        >\n          <AiFillHome\n            size={32}\n            fill={location.pathname === \"/home\" ? \"royalblue\" : \"gray\"}\n            className=\"mr-2\"\n          />\n        </NavMidItem>\n        <NavMidItem\n          to=\"/friends\"\n          active={location.pathname === \"/friends\"}\n          className=\"mid-nav-item\"\n        >\n\n          {newRequests.length ? <NewFriendsNotifications count={newRequests.length} /> : ''}\n          <FaUserFriends\n            fill={location.pathname === \"/friends\" ? \"royalblue\" : \"gray\"}\n            size={32}\n          />\n        </NavMidItem>\n      </Col>\n      {/** <768px */}\n      <Col className=\"position-relative align-items-center d-flex d-md-none\">\n        <MenuIcon onClick={() => {\n          setMenu(!menu);\n          setNotificationDropdown(false);\n          setUserDropdown(false);\n          }\n        }/>\n        <CSSTransition\n          in={menu}\n          timeout={300}\n          classNames=\"fade\"\n          unmountOnExit\n        >\n          <Menu>\n            <GrayHover><LinkGreyHover to='/home'>Home</LinkGreyHover></GrayHover>\n            <GrayHover><LinkGreyHover to='/friends'>Friends</LinkGreyHover></GrayHover>\n          </Menu>\n        </CSSTransition>\n      </Col>\n\n      <Col className=\"d-flex justify-content-end align-items-center\">\n        <RegularLink to=\"/profile\">\n          <RoundedUserDiv\n            active={location.pathname === \"/profile\"}\n            className=\"mr-1\"\n          >\n            <TopRightUserImg src={user.profile_photo} className=\"mr-2\" />\n            <p className=\"mb-0\">{user.first_name ? user.first_name : user.display_name ? user.display_name.split(' ')[0] : ''}</p>\n          </RoundedUserDiv>\n        </RegularLink>\n        <RoundWrapper className=\"d-xs-none d-md-flex mr-2\">\n          <LockedOverlay>\n            <AiFillLock color='red' />\n          </LockedOverlay>\n          <GrAdd size={16} fill=\"black\" />\n        </RoundWrapper>\n        <RoundWrapper className=\"d-xs-none d-md-flex mr-2\">\n          <LockedOverlay>\n            <AiFillLock color='red' />\n          </LockedOverlay>\n          <FaFacebookMessenger size={16} fill=\"black\" />\n        </RoundWrapper>\n        <RoundWrapper\n          active={notificationDropdown}\n          onClick={() => {\n            setNotificationDropdown(!notificationDropdown)\n            setUserDropdown(false);\n            setMenu(false);\n          }\n          }\n          className=\"mr-2\"\n        >\n          <AiFillBell\n            style={{\n              transition: \"all .5s ease-in-out\",\n              fill: notificationDropdown ? \"royalblue\" : \"black\",\n            }}\n            size={16}\n            fill=\"black\"\n          />\n          {newNotifications.length ? (\n            <NewNotifications count={newNotifications.length.toString()} />\n          ) : (\n            \"\"\n          )}\n        </RoundWrapper>\n        <RoundWrapper onClick={() => {\n          setUserDropdown(!userDropdown)\n          setMenu(false);\n          setNotificationDropdown(false);\n        }\n        }>\n          <GoTriangleDown\n            style={{\n              transition: \".3s ease-in-out\",\n              transform: userDropdown ? \"rotate(180deg)\" : \"rotate(0deg)\",\n              fill: userDropdown ? \"royalblue\" : \"black\",\n            }}\n            size={16}\n            fill=\"black\"\n          />\n        </RoundWrapper>\n      </Col>\n\n      {/** Collapsable div for user profile */}\n      <CSSTransition\n        in={userDropdown}\n        timeout={300}\n        classNames=\"fade\"\n        unmountOnExit\n      >\n        <CollapsableDiv>\n          <LinkGreyHover to=\"/profile\">\n            <GrayHover>\n              <RoundImage src={user.profile_photo} className=\"mr-2\" />\n              <div>\n                <p\n                  style={{ fontSize: \"18px\" }}\n                  className=\"font-weight-bold mb-0\"\n                >\n                  { user.display_name || user.first_name + \" \" + user.last_name }\n                </p>\n                <p className=\"text-muted mb-0\">See your profile</p>\n              </div>\n            </GrayHover>\n          </LinkGreyHover>\n          <hr />\n          <GrayHover onClick={() => logoutHandler()}>\n            <RoundWrapper className=\"mr-2\">\n              <FaDoorOpen size={24} />\n            </RoundWrapper>\n            <p className=\"mb-0 font-weight-bold\">Log Out</p>\n          </GrayHover>\n          <Warning onClick={() => setWarning(!warning)} style={{userSelect: 'none'}} className='d-flex justify-content-end align-items-center'>\n            <AiFillWarning fill='orange' size={32}/>\n            <p style={{color: 'orange'}} className='mb-0'>Warning</p>\n          </Warning>\n          <CSSTransition\n            in={warning}\n            timeout={300}\n            classNames='fade'\n            unmountOnExit\n          >\n            <DeleteAccountDiv onClick={() => deleteAccount()}>\n              <AiFillDelete color='red' size={16} className='mr-1'/>\n              <p style={{marginBottom: '0', fontSize: '14px', color: 'red', fontWeight: 'bold'}}>Delete Account</p>\n            </DeleteAccountDiv>\n          </CSSTransition>\n        </CollapsableDiv>\n      </CSSTransition>\n\n      {/* Collapsable div for notifications */}\n      <CSSTransition\n        in={notificationDropdown}\n        timeout={300}\n        classNames=\"fade\"\n        unmountOnExit\n      >\n        <CollapsableDiv>\n          <h3>Notifications</h3>\n          <FlexDiv className='px-2'>\n            {notifications.length ? <p className=\"mb-1\">New</p> : <p>No notifications</p>}\n            {notifications.length ?  <Button onClick={() => clearNotifications()} className='ml-auto' outline='light'>Clear all</Button> : ''}\n          </FlexDiv>\n          {notifications.map((notification) => (\n            <Notification\n              key={notification._id}\n              notification={notification}\n              notifications={notifications}\n              setNotifications={setNotifications}\n            />\n          ))}\n        </CollapsableDiv>\n      </CSSTransition>\n    </Nav>\n  );\n};\n\nexport default Navbar;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Navbar/Navbar.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/PostForm/PostForm.js",["248","249"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Label, Input, FormGroup, Button } from \"reactstrap\";\nimport { RoundImage, GrayHover } from \"./PostForm.components\";\nimport { FcStackOfPhotos } from \"react-icons/fc\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Link } from \"react-router-dom\";\nimport { LoadingOverlay } from \"..\";\n\nconst PostForm = ({ user, setPosts, posts }) => {\n  const [displayName, setDisplayName] = useState(user.display_name)\n  const [loading, setLoading] = useState(false);\n  const [showImageForm, setImageForm] = useState(false);\n  const [expandForm, setExpandForm] = useState(false);\n  const [content, setContent] = useState(\"\");\n  const [file, setFile] = useState(null);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n\n    const formData = new FormData();\n    formData.append(\"content\", content);\n    formData.append(\"image\", file);\n\n    setLoading(true);\n    axios\n      .post(\"/posts\", formData, {\n        headers: { Authorization: \"bearer \" + token },\n      })\n      .then((res) => {\n        setPosts([res.data, ...posts]);\n        setContent(\"\");\n        setFile(null);\n        setExpandForm(false);\n        setImageForm(false);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onChangeHandler = (e) => {\n    // Reset field height\n    e.target.style.height = \"inherit\";\n\n    // Calculate the height\n    const height = e.target.scrollHeight;\n\n    e.target.style.height = `${height}px`;\n  };\n\n  useEffect(() => {\n    setDisplayName(user.first_name || user.display_name.split(' ')[0]);\n  }, [])\n\n  return (\n    <Container\n      fluid\n      className=\"my-3 p-2 p-relative\"\n      style={{\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\n        background: \"white\",\n        borderRadius: \"5px\",\n      }}\n    >\n      {loading && <LoadingOverlay />}\n      <Form encType=\"multipart/form-data\" onSubmit={(e) => submitHandler(e)}>\n        <div className=\"d-flex align-items-center mb-2\">\n          <Link to=\"/profile\">\n            <RoundImage\n              className=\"mr-2\"\n              src={user.profile_photo}\n              width=\"36px\"\n            />\n          </Link>\n          <Input\n            id='post_input_form'\n            onFocus={() => setExpandForm(true)}\n            style={{ borderRadius: \"24px\" }}\n            value={content}\n            className=\"w-100 py-1 pr-5\"\n            type=\"textarea\"\n            rows={1}\n            name=\"content\"\n            onChange={(e) => {\n              setContent(e.target.value);\n              onChangeHandler(e);\n            }}\n            placeholder={`What's on your mind, ${displayName}?`}\n          />\n        </div>\n        <CSSTransition\n          in={showImageForm}\n          timeout={300}\n          classNames=\"fade\"\n          unmountOnExit\n        >\n          <FormGroup style={{ marginLeft: \"48px\" }}>\n            <Input\n              onChange={(e) => setFile(e.target.files[0])}\n              type=\"file\"\n              name=\"image\"\n            />\n            <em>Max 5MB (Accepted formats: jpg, jpeg, png)</em>\n          </FormGroup>\n        </CSSTransition>\n\n        <CSSTransition\n          in={expandForm}\n          timeout={300}\n          classNames=\"fade\"\n          unmountOnExit\n        >\n          <FormGroup className=\"py-2\">\n            <Button type=\"submit\" className=\"w-100 px-5\" color=\"secondary\">\n              Post!\n            </Button>\n          </FormGroup>\n        </CSSTransition>\n        <hr className=\"my-2\" />\n        <GrayHover onClick={() => setImageForm(!showImageForm)}>\n          <FcStackOfPhotos size={36} className=\"mr-2\" />\n          <p className=\"m-0\">Photos</p>\n        </GrayHover>\n      </Form>\n    </Container>\n  );\n};\n\nexport default PostForm;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/PostForm/PostForm.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Profile/Profile.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Comment/Comment.js",["250","251"],"import moment from \"moment\";\nimport { useState, useEffect } from \"react\";\nimport {\n  CommentContainer,\n  UserPhoto,\n  CommentBody,\n  CommentWrapper,\n  CommentFooter,\n  FooterLink,\n  LikesContainer,\n  ReplyCount,\n} from \"./Comment.components\";\nimport { Form, Input, Button, FormGroup } from \"reactstrap\";\nimport { Reply } from \"..\";\nimport { AiFillLike } from \"react-icons/ai\";\nimport { BsArrow90DegDown } from \"react-icons/bs\";\nimport { ReplyForm } from \"..\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst Comment = ({ level = 0, comments, comment, setComments, user, post }) => {\n\n  const [file, setFile] = useState(post.image);\n  const [showReplyForm, setShowReply] = useState(false);\n  const [showReplies, setShowReplies] = useState(false);\n  const [replies, setReplies] = useState([]);\n  const [content, setContent] = useState(comment.content);\n  const [showEdit, setEdit] = useState(false);\n\n  const config = localStorage.getItem('token') &&  {\n    headers: {\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n\n\n  const deleteHandler = () => {\n    window.confirm(\n      \"Are you sure you want to delete this comment? This action cannot be undone.\"\n    ) &&\n      axios\n        .delete(`/posts/${post._id}/comments/${comment._id}`, config)\n        .then((res) => {\n          console.log(res.data._id, comment._id);\n          setComments(\n            comments.filter((comment) => comment._id !== res.data._id)\n          );\n        })\n        .catch((err) => console.log(err));\n  };\n\n  const likeComment = () => {\n    axios\n      .post(`/posts/${post._id}/comments/${comment._id}`, {}, config)\n      .then((res) => {\n        setComments(\n          comments.map((comment) =>\n            comment._id === res.data._id ? res.data : comment\n          )\n        );\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const editHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('content', content);\n    if(file) formData.append('image', file);\n    axios\n      .put(`/posts/${post._id}/comments/${comment._id}`, formData, config)\n      .then((res) => {\n        setComments(\n          comments.map((comment) =>\n            comment._id === res.data._id ? res.data : comment\n          )\n        );\n        setEdit(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onChangeHandler = (target) => {\n    // Reset field height\n    target.style.height = \"inherit\";\n\n    // Get the computed styles for the element\n    const computed = window.getComputedStyle(target);\n\n    // Calculate the height\n    const height =\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\n      target.scrollHeight +\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\n\n    target.style.height = `${height}px`;\n  };\n\n  useEffect(() => {\n    if (comments && comment) {\n      setReplies(\n        comments.filter(\n          (comm) =>\n            /*comm.hasOwnProperty(\"comment\")*/ comm.comment && comm.comment._id === comment._id\n        )\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    const textarea = document.querySelector(\"textarea\");\n    if (textarea) {\n      onChangeHandler(textarea);\n    }\n  }, [showEdit]);\n\n  return (\n    <CommentContainer>\n      <Link\n        to={\n          user._id === comment.user._id\n            ? \"/profile\"\n            : `/users/${comment.user._id}`\n        }\n      >\n        <UserPhoto className=\"mr-2\" src={comment.user.profile_photo} />\n      </Link>\n      <CommentWrapper className={\"w-100\"}>\n        <CommentBody>\n          <h6 className=\"mb-0\">\n            {comment.user.display_name ||\n              comment.user.first_name + \" \" + comment.user.last_name}\n          </h6>\n          {!showEdit ? (\n            <div>\n              <p\n                className=\"mb-0\"\n                dangerouslySetInnerHTML={{ __html: comment.content }}\n              ></p>\n              {comment.image && (\n                <Link to=\"/profile\">\n                  <img width=\"100%\" src={comment.image.url} />\n                </Link>\n              )}\n            </div>\n          ) : (\n            <Form onSubmit={(e) => editHandler(e)} className=\"w-100\">\n              <FormGroup>\n                <Input\n                  type=\"textarea\"\n                  placeholder=\"Content...\"\n                  value={content}\n                  onChange={(e) => {\n                    setContent(e.target.value);\n                    onChangeHandler(e.target);\n                  }}\n                />\n              </FormGroup>\n              <FormGroup style={{ marginLeft: \"12px\" }}>\n                <Input\n                  onChange={(e) => setFile(e.target.files[0])}\n                  type=\"file\"\n                  name=\"image\"\n                />\n                <em>Max 5MB (Accepted formats: jpg, jpeg, png)</em>\n              </FormGroup>\n              <FormGroup className=\"text-right mb-1\">\n                <Button color=\"primary\" type=\"submit\" size=\"sm\">\n                  Edit\n                </Button>\n                <Button onClick={() => setEdit(false)} type='button' size='sm' className='ml-2' color='danger'>Cancel</Button>\n              </FormGroup>\n              \n            </Form>\n          )}\n          {!showEdit && (\n            <LikesContainer>\n              <AiFillLike\n                fill={\n                  comment.likes.some((e) => e._id === user._id)\n                    ? \"royalblue\"\n                    : \"\"\n                }\n                size={12}\n              />\n              &nbsp;\n              <p style={{ fontSize: \"12px\" }} className=\"d-inline-block mb-0\">\n                {comment.likes.length}\n              </p>\n            </LikesContainer>\n          )}\n        </CommentBody>\n        <CommentFooter>\n          <FooterLink\n            color={\n              comment.likes.some((e) => e._id === user._id)\n                ? \"royalblue\"\n                : \"black\"\n            }\n            onClick={() => likeComment()}\n            bold\n          >\n            Like\n          </FooterLink>\n          {level < 3 && (\n            <FooterLink bold onClick={() => setShowReply(!showReplyForm)}>\n              Reply\n            </FooterLink>\n          )}\n          {user._id === comment.user._id && (\n            <FooterLink bold onClick={() => deleteHandler()} color=\"gray\">\n              <span style={{ color: \"black\" }}>&middot;&nbsp;&nbsp;</span>\n              Delete\n            </FooterLink>\n          )}\n          {user._id === comment.user._id && (\n            <FooterLink bold onClick={() => setEdit(!showEdit)} color=\"gray\">\n              Edit\n            </FooterLink>\n          )}\n          <FooterLink color=\"lightgray\">\n            {moment(comment.createdAt).fromNow()}\n          </FooterLink>\n        </CommentFooter>\n        {replies.length && !showReplies ? (\n          <div\n            onClick={() => setShowReplies(true)}\n            className=\"pl-3 pt-2 d-flex align-items-center\"\n          >\n            <BsArrow90DegDown\n              size={24}\n              fill=\"black\"\n              style={{ transform: \"rotate(-90deg)\" }}\n            />\n            &nbsp;\n            <ReplyCount className=\"mb-0 font-weight-bold\">\n              {replies.length} Replies\n            </ReplyCount>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {showReplies &&\n          replies.map((reply) => (\n            <Reply\n              key={reply._id}\n              reply={reply}\n              user={user}\n              setReplies={setReplies}\n              replies={replies}\n              comment={comment}\n              post={post}\n            />\n          ))}\n        {showReplyForm && (\n          <ReplyForm\n            key={comment._id}\n            user={user}\n            post={post}\n            comment={comment}\n            replies={replies}\n            setReplies={setReplies}\n            setShowReply={setShowReply}\n            setComments={setComments}\n          />\n        )}\n      </CommentWrapper>\n    </CommentContainer>\n  );\n};\n\nexport default Comment;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/CommentForm/CommentForm.js",["252","253","254"],"import Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Form, Input, FormGroup, Button } from \"reactstrap\";\nimport { UserImage, PhotoImage } from \"./CommentForm.components\";\nimport { ImageForm } from \"..\";\nimport { CSSTransition } from 'react-transition-group';\n\nconst CommentForm = ({ post, user, comments, setComments }) => {\n  const [file, setFile] = useState(null);\n  const [imageForm, setImageForm] = useState(false);\n  const [content, setContent] = useState(\"\");\n  const [showSubmit, setSubmit] = useState(false);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"content\", content);\n    if (file) formData.append(\"image\", file);\n    Axios.post(`/posts/${post._id}/comments`, formData, {\n      headers: {\n        Authorization:\n          \"bearer \" + localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => {\n        setContent(\"\");\n        setImageForm(false);\n        setFile(null);\n        setComments([res.data, ...comments]);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onChangeHandler = (e) => {\n    // Reset field height\n    e.target.style.height = \"inherit\";\n\n    // Calculate the height\n    const height = e.target.scrollHeight;\n\n    e.target.style.height = `${height}px`;\n  };\n\n  return (\n    <Form onSubmit={(e) => submitHandler(e)}>\n      <div className=\"d-flex align-items-center mb-2\">\n        <Link to=\"/profile\">\n          <UserImage className=\"mr-2\" src={user.profile_photo} />\n        </Link>\n        <FormGroup className=\"mb-0 w-100 position-relative\">\n          <Input\n            onFocus={() => setSubmit(true)}\n            style={{ borderRadius: \"16px\" }}\n            value={content}\n            className=\"w-100 py-1 pr-5\"\n            placeholder=\"Write a comment..\"\n            type=\"textarea\"\n            rows={1}\n            name=\"content\"\n            onChange={(e) => {\n              setContent(e.target.value);\n              onChangeHandler(e);\n            }}\n          />\n          <PhotoImage\n            onClick={() => setImageForm(!imageForm)}\n            size={24}\n            fill=\"green\"\n          />\n        </FormGroup>\n      </div>\n      <CSSTransition\n          in={imageForm}\n          timeout={300}\n          classNames=\"fade\"\n          unmountOnExit\n        >\n          <FormGroup style={{ marginLeft: \"48px\" }}>\n            <Input\n              onChange={(e) => setFile(e.target.files[0])}\n              type=\"file\"\n              name=\"image\"\n            />\n            <em>Max 5MB (Accepted formats: jpg, jpeg, png)</em>\n          </FormGroup>\n        </CSSTransition>\n      {showSubmit && (\n        <FormGroup className=\"text-right\">\n          <Button type=\"submit\" color=\"primary\" size=\"sm\">\n            Comment!\n          </Button>\n        </FormGroup>\n      )}\n    </Form>\n  );\n};\n\nexport default CommentForm;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/ReplyForm/ReplyForm.js",["255"],"import Axios from \"axios\";\nimport { useState } from \"react\";\nimport { Form, Input, FormGroup, Button } from \"reactstrap\";\nimport { RoundImage, PhotoImage } from \"./ReplyForm.components\";\nimport { CSSTransition } from 'react-transition-group';\nimport { ImageForm } from '../';\n\nconst ReplyForm = ({\n  post,\n  setShowReply,\n  user,\n  comment,\n  replies,\n  setReplies,\n}) => {\n  const [file, setFile] = useState(null);\n  const [content, setContent] = useState(\"\");\n  const [showSubmit, setShowSubmit] = useState(false);\n  const [imageForm, setImageForm] = useState(false);\n\n  const config = localStorage.getItem('token') &&  {\n    headers: {\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"content\", content);\n    formData.append('comment', comment._id);\n    if (file) formData.append(\"image\", file);\n    Axios.post(\n      `/posts/${post._id}/comments/`,\n      formData,\n      config\n    )\n      .then((res) => {\n        setShowReply(false);\n        setContent(\"\");\n        setReplies([res.data, ...replies]);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onChangeHandler = (e) => {\n    // Reset field height\n    e.target.style.height = \"inherit\";\n\n    // Get the computed styles for the element\n    const computed = window.getComputedStyle(e.target);\n\n    // Calculate the height\n    const height =\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\n      e.target.scrollHeight +\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\n\n    e.target.style.height = `${height}px`;\n  };\n\n  return (\n    <Form onSubmit={(e) => submitHandler(e)}>\n      <FormGroup className=\"mb-2 mt-1 d-flex align-items-center position-relative\">\n        <RoundImage className=\"mr-2\" src={user.profile_photo} />\n        <Input\n          value={content}\n          onFocus={() => setShowSubmit(true)}\n          onChange={(e) => {\n            setContent(e.target.value);\n            onChangeHandler(e);\n          }}\n          placeholder=\"Reply..\"\n          rows={1}\n          style={{ borderRadius: \"16px\", paddingRight: \"3rem\" }}\n          type=\"textarea\"\n        />\n        <PhotoImage size={24} fill=\"green\" onClick={() => setImageForm(!imageForm)}/>\n      </FormGroup>\n      <CSSTransition\n          in={imageForm}\n          timeout={300}\n          classNames=\"fade\"\n          unmountOnExit\n        >\n          <FormGroup style={{ marginLeft: \"48px\" }}>\n            <Input\n              onChange={(e) => setFile(e.target.files[0])}\n              type=\"file\"\n              name=\"image\"\n            />\n            <em>Max 5MB (Accepted formats: jpg, jpeg, png)</em>\n          </FormGroup>\n        </CSSTransition>\n      {showSubmit && (\n        <FormGroup className=\"mb-0 text-right\">\n          <Button type=\"submit\" size=\"sm\">\n            Reply\n          </Button>\n        </FormGroup>\n      )}\n    </Form>\n  );\n};\n\nexport default ReplyForm;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Post/Post.js",["256","257"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Form, Input, Button, FormGroup } from \"reactstrap\";\nimport {\n  PostContainer,\n  RoundImage,\n  Header,\n  FlexContainer,\n  Body,\n  Footer,\n  TopFooter,\n  BottomFooter,\n  RoundWrapper,\n  FooterItem,\n  RoundedContainer,\n  RoundedWrapper,\n  CommentsContainer,\n  ClickDiv,\n  FunctionalItem,\n} from \"./Post.components\";\nimport { Comment, CommentForm, LikesModal } from \"..\";\nimport {\n  AiFillLike,\n  AiOutlineLike,\n  AiFillDelete,\n  AiFillEdit,\n} from \"react-icons/ai\";\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport { VscComment } from \"react-icons/vsc\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst Post = ({ user, posts, post, setPosts }) => {\n\n  const [file, setFile] = useState(post.image);\n  const [content, setContent] = useState('');\n  const [edit, setEdit] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [settingsDropdown, setSettingsDropdown] = useState(false);\n  const [commentsDropdown, setCommentsDropdown] = useState(false);\n  const [likesModal, setLikesModal] = useState(false);\n\n  const config = localStorage.getItem('token') &&  {\n    headers: {\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n\n  const editHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('content', content);\n    if(file) formData.append('image', file);\n    axios\n      .put(`/posts/${post._id}`, formData, config)\n      .then((res) => {\n        setPosts(\n          posts.map((post) => (post._id === res.data._id ? res.data : post))\n        );\n        setEdit(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const deleteHandler = () => {\n    window.confirm(\n      \"Are you sure you want to delete this post? This action cannot be undone!\"\n    ) &&\n      axios\n        .delete(`/posts/${post._id}`, config)\n        .then((res) => {\n          setPosts(posts.filter((post) => post._id !== res.data._id));\n          setSettingsDropdown(false);\n        })\n        .catch((err) => console.log(err));\n  };\n\n  const likePost = () => {\n    axios\n      .post(\n        `/posts/${post._id}/like`,\n        {},\n        config\n      )\n      .then((res) => {\n        setPosts(\n          posts.map((post) => (post._id === res.data._id ? res.data : post))\n        );\n      });\n  };\n\n  const onChangeHandler = (e) => {\n    // Reset field height\n    e.target.style.height = \"inherit\";\n\n    // Get the computed styles for the element\n    const computed = window.getComputedStyle(e.target);\n\n    // Calculate the height\n    const height =\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\n      e.target.scrollHeight +\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\n\n    e.target.style.height = `${height}px`;\n  };\n\n  useEffect(() => {\n    // GET Comments\n    axios\n      .get(`/posts/${post._id}/comments`)\n      .then((res) => {\n        setComments(res.data);\n      })\n      .catch((err) => console.log(err));\n    //\n  }, []);\n\n  useEffect(() => {\n    const textarea = document.querySelector(\"textarea\");\n    if (textarea) {\n      textarea.style.height = \"inherit\";\n      const computed = window.getComputedStyle(textarea);\n      const height =\n        parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\n        parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\n        textarea.scrollHeight +\n        parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\n        parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\n      textarea.style.height = height + \"px\";\n    }\n  }, [edit]);\n\n  return (\n    <PostContainer className=\"mb-2\">\n      <Header className=\"mb-2\">\n        <Link\n          to={\n            post.user._id === user._id ? \"/profile\" : `/users/${post.user._id}`\n          }\n        >\n          <RoundImage src={post.user.profile_photo} />\n        </Link>\n        <FlexContainer>\n          <div>\n            <h4 className=\"mb-0\">\n              {post.user.display_name ||\n                (post.user.first_name + \" \" + post.user.last_name)}\n            </h4>\n            <p style={{ fontSize: \"13px\" }} className=\"mb-0 text-muted\">\n              {moment(post.createdAt).fromNow()}\n            </p>\n          </div>\n          {(user._id === post.user._id) && (\n            <RoundedWrapper\n              onClick={() => setSettingsDropdown(!settingsDropdown)}\n            >\n              <BsThreeDotsVertical size=\"24\" />\n            </RoundedWrapper>\n          )}\n        </FlexContainer>\n\n        {/** Settings Dropdown  */}\n        {settingsDropdown && (\n          <RoundedContainer>\n            <FunctionalItem\n              onClick={() => {\n                setEdit(true);\n                setSettingsDropdown(false);\n              }}\n            >\n              <AiFillEdit color=\"palegoldenrod\" size={32} />\n              &nbsp;Edit Post\n            </FunctionalItem>\n            <hr className=\"my-2\" />\n            <FunctionalItem onClick={() => deleteHandler()}>\n              <AiFillDelete color=\"red\" size={32} />\n              &nbsp;Delete Post\n            </FunctionalItem>\n          </RoundedContainer>\n        )}\n      </Header>\n      {!edit && (\n        <Body>\n          <p\n            className=\"mb-1\"\n            dangerouslySetInnerHTML={{ __html: post.content }}\n          ></p>\n          {(post.image && post.image.url) && (\n            <img className=\"mb-2\" width=\"100%\" src={post.image.url} />\n          )}\n        </Body>\n      )}\n      {edit && (\n        <Form onSubmit={(e) => editHandler(e)}>\n          <FormGroup>\n            <Input\n              placeholder='Content...'\n              type=\"textarea\"\n              onFocus={(e) => onChangeHandler(e)}\n              value={content}\n              onChange={(e) => {\n                setContent(e.target.value);\n                onChangeHandler(e);\n              }}\n            />\n          </FormGroup>\n          <FormGroup style={{ marginLeft: \"12px\" }}>\n            <Input\n              onChange={(e) => setFile(e.target.files[0])}\n              type=\"file\"\n              name=\"image\"\n            />\n            <em>Max 5MB (Accepted formats: jpg, jpeg, png)</em>\n          </FormGroup>\n          <FormGroup className=\"d-flex align-items-center\">\n            <Button\n              className=\"ml-auto mr-2\"\n              type=\"submit\"\n              color=\"primary\"\n              size=\"sm\"\n            >\n              Edit\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={() => setEdit(false)}\n              color=\"danger\"\n              size=\"sm\"\n            >\n              Cancel\n            </Button>\n          </FormGroup>\n        </Form>\n      )}\n      <Footer>\n        <TopFooter>\n          <ClickDiv onClick={() => setLikesModal(true)} className=\"d-flex\">\n            <RoundWrapper className=\"mr-1\" bgColor=\"royalblue\">\n              <AiFillLike\n                data-toggle=\"tooltip\"\n                data-html=\"true\"\n                title={<em></em>}\n                size={12}\n                fill=\"white\"\n              />\n            </RoundWrapper>\n            <p style={{ fontSize: \"14px\" }} className=\"mb-0\">\n              {post.likes.length}\n            </p>\n          </ClickDiv>\n          <ClickDiv onClick={() => setCommentsDropdown(!commentsDropdown)}>\n            <p className=\"mb-0\">{comments.length} Comments</p>\n          </ClickDiv>\n        </TopFooter>\n        <hr className=\"my-1\" />\n        <BottomFooter>\n          <FooterItem onClick={() => likePost()}>\n            {!post.likes.some((e) => e._id === user._id) ? (\n              <div style={{display: 'flex', alignItems: 'center'}}>\n                <AiOutlineLike size={20} />\n                <span>&nbsp;Like</span>\n              </div>\n            ) : (\n              <div style={{display: 'flex', alignItems: 'center'}}>\n                <AiFillLike size={20} fill=\"royalblue\" />\n                <span style={{color: 'royalblue'}}>&nbsp;Liked</span>\n              </div>\n            )}\n          </FooterItem>\n          <FooterItem onClick={() => setCommentsDropdown(!commentsDropdown)}>\n            <VscComment size={20} />\n            &nbsp;Comment\n          </FooterItem>\n        </BottomFooter>\n      </Footer>\n\n      {/** Comment dropdown */}\n      {commentsDropdown && (\n        <CommentsContainer>\n          <hr className=\"my-1\" />\n          {comments\n            .filter((comment) => !comment.hasOwnProperty(\"comment\"))\n            .map((comment) => (\n              <Comment\n                key={comment._id}\n                comments={comments}\n                post={post}\n                user={user}\n                comment={comment}\n                setComments={setComments}\n              />\n            ))}\n          <CommentForm\n            post={post}\n            user={user}\n            setComments={setComments}\n            comments={comments}\n          />\n        </CommentsContainer>\n      )}\n\n      {/* Likes Modal (absolutely positioned) */}\n      <CSSTransition\n        in={likesModal}\n        timeout={300}\n        classNames='fade'\n        unmountOnExit\n      >\n        <LikesModal setLikesModal={setLikesModal} likes={post.likes} />\n      </CSSTransition>\n    </PostContainer>\n  );\n};\n\nexport default Post;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/LoadingOverlay/LoadingOverlay.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/ImageForm/ImageForm.js",["258","259","260","261"],"import Axios from \"axios\";\nimport { useState } from \"react\";\nimport { GrDiamond } from \"react-icons/gr\";\nimport { Container, Form, Input, Button, FormGroup } from \"reactstrap\";\nimport { TransparentBackground } from \"./ImageForm.components\";\n\nconst ImageForm = ({\n  method = \"PUT\",\n  content,\n  path,\n  setImageForm,\n  setResource,\n  resources,\n  reloadUser,\n}) => {\n  const [file, setFile] = useState(null);\n\n  const config = localStorage.getItem('token') &&  {\n    headers: {\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    e.stopPropagation(); // stop propagating submit the the comment form\n    const formData = new FormData();\n    if (content) formData.append(\"content\", content);\n    formData.append(\"image\", file);\n    if (method === \"PUT\") {\n      Axios.put(path, formData, config)\n        .then((res) => {\n          setImageForm(false);\n          typeof resources === \"Array\"\n            ? setResource([...resources, res.data])\n            : setResource(res.data);\n        })\n        .catch((err) => console.log(err));\n    } else {\n      Axios.post(path, formData, config).then((res) => {\n        setImageForm(false);\n        typeof resources === \"Array\"\n        ? setResource([...resources, res.data])\n        : setResource(res.data);\n      });\n    }\n  };\n\n  return (\n    <TransparentBackground className=\"d-flex justify-content-center align-items-center\">\n      <Form\n        onSubmit={(e) => onSubmitHandler(e)}\n        style={{ background: \"white\", borderRadius: \"10px\" }}\n        className=\"p-3 w-50 mx-auto\"\n        border\n      >\n        <FormGroup className=\"text-center\">\n          <Input\n            onChange={(e) => setFile(e.target.files[0])}\n            type=\"file\"\n            name=\"image\"\n          />\n        </FormGroup>\n        <FormGroup className=\"d-flex justify-content-end\">\n          <Button className=\"mr-2\" type=\"submit\" color=\"secondary\">\n            Submit\n          </Button>\n          <Button\n            type=\"button\"\n            color=\"danger\"\n            onClick={() => setImageForm(false)}\n          >\n            Cancel\n          </Button>\n        </FormGroup>\n      </Form>\n    </TransparentBackground>\n  );\n};\n\nexport default ImageForm;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Comment/Comment.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/CommentForm/CommentForm.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/ReplyForm/ReplyForm.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Post/Post.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/LoadingOverlay/LoadingOverlay.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/ImageForm/ImageForm.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/PostPage/PostPage.js",["262"],"import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container } from \"reactstrap\";\nimport { Post, Navbar, LoadingOverlay } from \"../../Components\";\nimport { CSSTransition } from 'react-transition-group';\nimport axios from 'axios';\n\nconst PostPage = (props) => {\n  \n  const { post_id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [post, setPost] = useState(undefined)\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    // GET All posts\n    axios.get('/posts')\n    .then(res => {\n      setPosts(res.data)\n    })\n    // GET This post\n    axios.get('/posts/' + post_id)\n    .then(res => {\n      setPost(res.data);\n      setLoading(false);\n    })\n  }, [])\n\n  return (\n    <Container fluid className=\"m-0 p-0\">\n      <CSSTransition\n        in={loading}\n        timeout={300}\n        classNames='fade'\n        unmountOnExit\n      >\n        <LoadingOverlay />\n      </CSSTransition>\n      <Navbar key=\"posts\" {...props} />\n      <Container className=\"mt-2\">\n        {post && <Post {...props} post={post} posts={posts} setPosts={setPosts} />}\n      </Container>\n    </Container>\n  );\n};\n\nexport default PostPage;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Notification/Notification.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/UserList/UserList.js",["263"],"const UserList = ({ users }) => {\n  return (\n    <div className=\"p-2\" style={{ borderRadius: \"5px\" }}>\n      {users.map((user) => {\n        <p className=\"mb-1\">\n          {user.display_name || user.first_name + \" \" + user.last_name}\n        </p>;\n      })}\n    </div>\n  );\n};\n\nexport default UserList;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Reply/Reply.js",["264","265","266","267"],"import moment from \"moment\";\nimport { useState, useEffect } from \"react\";\nimport {\n  ReplyContainer,\n  UserPhoto,\n  ReplyBody,\n  ReplyWrapper,\n  ReplyFooter,\n  FooterLink,\n  LikesContainer,\n  ReplyCount,\n} from \"./Reply.components\";\nimport { Form, Input, Button, FormGroup } from \"reactstrap\";\nimport { AiFillLike } from \"react-icons/ai\";\nimport { BsArrow90DegDown } from \"react-icons/bs\";\nimport { ReplyForm } from \"..\";\nimport axios from \"axios\";\n\nconst Reply = ({\n  level = 0,\n  reply,\n  replies,\n  setReplies,\n  comment,\n  user,\n  post,\n}) => {\n  const [content, setContent] = useState(reply.content);\n  const [showEdit, setEdit] = useState(false);\n\n  const config = localStorage.getItem('token') &&  {\n    headers: {\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n\n\n  const deleteHandler = () => {\n    window.confirm(\n      \"Are you sure you want to delete this comment? This action cannot be undone.\"\n    ) &&\n      axios\n        .delete(`/posts/${post._id}/comments/${reply._id}`, config)\n        .then((res) => {\n          setReplies(replies.filter((reply) => reply._id !== res.data._id));\n        })\n        .catch((err) => console.log(err));\n  };\n\n  const likeComment = () => {\n    axios\n      .post(`/posts/${post._id}/comments/${reply._id}`, {}, config)\n      .then((res) => {\n        setReplies(\n          replies.map((reply) =>\n            reply._id === res.data._id ? res.data : reply\n          )\n        );\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const editHandler = (e) => {\n    e.preventDefault();\n    axios\n      .put(`/posts/${post._id}/comments/${reply._id}`, { content }, config)\n      .then((res) => {\n        setReplies(\n          replies.map((reply) =>\n            reply._id === res.data._id ? res.data : reply\n          )\n        );\n        setEdit(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onChangeHandler = (target) => {\n    // Reset field height\n    target.style.height = \"inherit\";\n\n    // Get the computed styles for the element\n    const computed = window.getComputedStyle(target);\n\n    // Calculate the height\n    const height =\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\n      target.scrollHeight +\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\n\n    target.style.height = `${height}px`;\n  };\n\n  useEffect(() => {\n    const textarea = document.querySelector(\"textarea\");\n    if (textarea) {\n      onChangeHandler(textarea);\n    }\n  }, [showEdit]);\n\n  return (\n    <ReplyContainer>\n      <UserPhoto className=\"mr-2\" src={reply.user.profile_photo} />\n      <ReplyWrapper className={\"w-100\"}>\n        <ReplyBody>\n          <h6 className=\"mb-0\">\n            {reply.user.display_name ||\n              reply.user.first_name + \" \" + reply.user.last_name}\n          </h6>\n          {!showEdit ? (\n            <div>\n              <p\n                className=\"mb-0\"\n                dangerouslySetInnerHTML={{ __html: reply.content }}\n              ></p>\n              {reply.image && <img  width=\"100%\" src={reply.image.url} />}\n            </div>\n          ) : (\n            <Form onSubmit={(e) => editHandler(e)} className=\"w-100\">\n              <FormGroup>\n                <Input\n                  type=\"textarea\"\n                  value={content}\n                  onChange={(e) => {\n                    setContent(e.target.value);\n                    onChangeHandler(e.target);\n                  }}\n                />\n              </FormGroup>\n              <FormGroup className=\"text-right mb-1\">\n                <Button color=\"primary\" type=\"submit\" size=\"sm\">\n                  Edit\n                </Button>\n              </FormGroup>\n            </Form>\n          )}\n          {!showEdit && (\n            <LikesContainer>\n              <AiFillLike\n                fill={\n                  reply.likes.some((e) => e._id === user._id) ? \"royalblue\" : \"\"\n                }\n                size={12}\n              />\n              &nbsp;\n              <p style={{ fontSize: \"12px\" }} className=\"d-inline-block mb-0\">\n                {reply.likes.length}\n              </p>\n            </LikesContainer>\n          )}\n        </ReplyBody>\n        <ReplyFooter>\n          <FooterLink\n            color={\n              reply.likes.some((e) => e._id === user._id)\n                ? \"royalblue\"\n                : \"black\"\n            }\n            onClick={() => likeComment()}\n            bold\n          >\n            Like\n          </FooterLink>\n          {user._id === reply.user._id && (\n            <FooterLink bold onClick={() => deleteHandler()} color=\"gray\">\n              <span style={{ color: \"black\" }}>&middot;&nbsp;&nbsp;</span>\n              Delete\n            </FooterLink>\n          )}\n          {user._id === reply.user._id && (\n            <FooterLink bold onClick={() => setEdit(!showEdit)} color=\"gray\">\n              Edit\n            </FooterLink>\n          )}\n          <FooterLink color=\"lightgray\">\n            {moment(reply.createdAt).fromNow()}\n          </FooterLink>\n        </ReplyFooter>\n      </ReplyWrapper>\n    </ReplyContainer>\n  );\n};\n\nexport default Reply;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendRequest/FriendRequest.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendRequest/FriendRequest.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Notification/Notification.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Reply/Reply.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendSuggestion/FriendSuggestion.js",["268","269","270"],"import { Container, Row, Col, Button } from \"reactstrap\";\nimport {\n  FriendsContainer,\n  FriendInfo,\n  RoundImage,\n} from \"./FriendSuggestion.components\";\n\nconst FriendSuggestion = ({ onClick, sendRequest, to }) => {\n  return (\n    <FriendsContainer data-id={to._id} onClick={() => onClick(to._id)}>\n      <RoundImage src={to.profile_photo} />\n      <FriendInfo>\n        <h4>{to.display_name || to.first_name + \" \" + to.last_name}</h4>\n        {\n          <div>\n            <Button\n              onClick={() => sendRequest(to._id)}\n              color=\"primary\"\n              className=\"w-100\"\n            >\n              Send Friend Request\n            </Button>\n          </div>\n        }\n      </FriendInfo>\n    </FriendsContainer>\n  );\n};\n\nexport default FriendSuggestion;\n","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendSuggestion/FriendSuggestion.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/ProtectedRoute/ProtectedRoute.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/FacebookLogin/FacebookLogin.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Register/Register.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Index/Index.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/LikesModal/LikesModal.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/LikesModal/LikesModal.components.js",[],["271","272"],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Photos/Photos.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/ProfileFriends/ProfileFriends.js",["273"],"\nconst ProfileFriends = ({}) => {\n  return (\n    <>\n    </>\n  )\n}\n\nexport default ProfileFriends;","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Pages/Photos/Photos.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Photo/Photo.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendsProfile/FriendsProfile.js",["274"],"import { useEffect, useState } from 'react';\nimport {\n  Wrapper, \n  FriendsContainer,\n  Friend,\n  Image\n} from \"./FriendsProfile.components\";\nimport axios from 'axios';\n\nconst FriendsProfile = ({user, currentUser}) => {\n\n  const [friends, setFriends] = useState([]);\n\n  useEffect(() => {\n    axios.get('/users/' + currentUser._id)\n    .then(res => setFriends(res.data.friends));\n  }, [])\n\n  return (\n    <Wrapper>\n      <FriendsContainer>\n        {\n          friends.map(friend => \n            <Friend to={friend._id === user._id ? '/profile' : `/users/${friend._id}`} >\n              <Image width='36px' height='36px' className='mr-2' src={friend.profile_photo}></Image>\n              <p style={{width: '90%'}} className='mb-0'>{friend.display_name || friend.first_name + ' ' + friend.last_name}</p>\n            </Friend>\n          )\n        }\n      </FriendsContainer>\n    </Wrapper>\n  )\n}\n\nexport default FriendsProfile;","/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/Photo/Photo.components.js",[],"/Users/gabriel/Desktop/odin-nodejs-foundation/facebook/client/src/Components/FriendsProfile/FriendsProfile.components.js",[],{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","severity":1,"message":"280","line":4,"column":34,"nodeType":"281","messageId":"282","endLine":4,"endColumn":39},{"ruleId":"283","severity":1,"message":"284","line":34,"column":6,"nodeType":"285","endLine":34,"endColumn":12,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":63,"column":9,"nodeType":"289","endLine":66,"endColumn":11},{"ruleId":"283","severity":1,"message":"284","line":43,"column":6,"nodeType":"285","endLine":43,"endColumn":12,"suggestions":"290"},{"ruleId":"279","severity":1,"message":"291","line":3,"column":31,"nodeType":"281","messageId":"282","endLine":3,"endColumn":37},{"ruleId":"279","severity":1,"message":"292","line":19,"column":10,"nodeType":"281","messageId":"282","endLine":19,"endColumn":22},{"ruleId":"283","severity":1,"message":"293","line":75,"column":6,"nodeType":"285","endLine":75,"endColumn":8,"suggestions":"294"},{"ruleId":"283","severity":1,"message":"295","line":84,"column":6,"nodeType":"285","endLine":84,"endColumn":19,"suggestions":"296"},{"ruleId":"283","severity":1,"message":"297","line":92,"column":6,"nodeType":"285","endLine":92,"endColumn":16,"suggestions":"298"},{"ruleId":"279","severity":1,"message":"299","line":1,"column":31,"nodeType":"281","messageId":"282","endLine":1,"endColumn":37},{"ruleId":"283","severity":1,"message":"300","line":25,"column":6,"nodeType":"285","endLine":25,"endColumn":8,"suggestions":"301"},{"ruleId":"279","severity":1,"message":"302","line":18,"column":3,"nodeType":"281","messageId":"282","endLine":18,"endColumn":18},{"ruleId":"283","severity":1,"message":"303","line":126,"column":6,"nodeType":"285","endLine":126,"endColumn":16,"suggestions":"304"},{"ruleId":"283","severity":1,"message":"305","line":158,"column":6,"nodeType":"285","endLine":158,"endColumn":19,"suggestions":"306"},{"ruleId":"283","severity":1,"message":"307","line":164,"column":6,"nodeType":"285","endLine":164,"endColumn":25,"suggestions":"308"},{"ruleId":"279","severity":1,"message":"309","line":37,"column":3,"nodeType":"281","messageId":"282","endLine":37,"endColumn":16},{"ruleId":"283","severity":1,"message":"293","line":118,"column":6,"nodeType":"285","endLine":118,"endColumn":8,"suggestions":"310"},{"ruleId":"283","severity":1,"message":"311","line":127,"column":6,"nodeType":"285","endLine":127,"endColumn":8,"suggestions":"312"},{"ruleId":"283","severity":1,"message":"313","line":144,"column":6,"nodeType":"285","endLine":144,"endColumn":13,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":171,"column":15,"nodeType":"317","endLine":171,"endColumn":37},{"ruleId":"279","severity":1,"message":"280","line":3,"column":27,"nodeType":"281","messageId":"282","endLine":3,"endColumn":32},{"ruleId":"283","severity":1,"message":"318","line":54,"column":6,"nodeType":"285","endLine":54,"endColumn":8,"suggestions":"319"},{"ruleId":"283","severity":1,"message":"320","line":111,"column":6,"nodeType":"285","endLine":111,"endColumn":8,"suggestions":"321"},{"ruleId":"287","severity":1,"message":"288","line":145,"column":19,"nodeType":"289","endLine":145,"endColumn":63},{"ruleId":"279","severity":1,"message":"322","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":19},{"ruleId":"279","severity":1,"message":"299","line":3,"column":31,"nodeType":"281","messageId":"282","endLine":3,"endColumn":37},{"ruleId":"279","severity":1,"message":"323","line":6,"column":10,"nodeType":"281","messageId":"282","endLine":6,"endColumn":19},{"ruleId":"279","severity":1,"message":"323","line":6,"column":10,"nodeType":"281","messageId":"282","endLine":6,"endColumn":19},{"ruleId":"283","severity":1,"message":"324","line":120,"column":6,"nodeType":"285","endLine":120,"endColumn":8,"suggestions":"325"},{"ruleId":"287","severity":1,"message":"288","line":193,"column":13,"nodeType":"289","endLine":193,"endColumn":71},{"ruleId":"279","severity":1,"message":"326","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":19},{"ruleId":"279","severity":1,"message":"327","line":4,"column":10,"nodeType":"281","messageId":"282","endLine":4,"endColumn":19},{"ruleId":"328","severity":1,"message":"329","line":35,"column":32,"nodeType":"330","messageId":"331","endLine":35,"endColumn":39},{"ruleId":"328","severity":1,"message":"329","line":43,"column":30,"nodeType":"330","messageId":"331","endLine":43,"endColumn":37},{"ruleId":"283","severity":1,"message":"332","line":29,"column":6,"nodeType":"285","endLine":29,"endColumn":8,"suggestions":"333"},{"ruleId":"334","severity":1,"message":"335","line":4,"column":25,"nodeType":"336","messageId":"337","endLine":4,"endColumn":27},{"ruleId":"279","severity":1,"message":"338","line":11,"column":3,"nodeType":"281","messageId":"282","endLine":11,"endColumn":13},{"ruleId":"279","severity":1,"message":"339","line":15,"column":10,"nodeType":"281","messageId":"282","endLine":15,"endColumn":26},{"ruleId":"279","severity":1,"message":"340","line":16,"column":10,"nodeType":"281","messageId":"282","endLine":16,"endColumn":19},{"ruleId":"287","severity":1,"message":"288","line":118,"column":31,"nodeType":"289","endLine":118,"endColumn":74},{"ruleId":"279","severity":1,"message":"327","line":1,"column":10,"nodeType":"281","messageId":"282","endLine":1,"endColumn":19},{"ruleId":"279","severity":1,"message":"341","line":1,"column":21,"nodeType":"281","messageId":"282","endLine":1,"endColumn":24},{"ruleId":"279","severity":1,"message":"342","line":1,"column":26,"nodeType":"281","messageId":"282","endLine":1,"endColumn":29},{"ruleId":"275","replacedBy":"343"},{"ruleId":"277","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":2,"column":25,"nodeType":"347","messageId":"348","endLine":2,"endColumn":27},{"ruleId":"283","severity":1,"message":"349","line":17,"column":6,"nodeType":"285","endLine":17,"endColumn":8,"suggestions":"350"},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["353"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["354"],"'Button' is defined but never used.","'sentRequests' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPreviewUserPosts' needs the current value of 'posts'.",["356"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array. If 'setSentRequests' needs the current value of 'user._id', you can also switch to useReducer instead of useState and read 'user._id' in the reducer.",["357"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'user._id' and 'user.friends'. Either include them or remove the dependency array.",["358"],"'PhotosContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser._id' and 'user._id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSentRequest' needs the current value of 'currentUser._id'.",["359"],"React Hook useEffect has missing dependencies: 'config' and 'user_id'. Either include them or remove the dependency array.",["360"],"React Hook useEffect has a missing dependency: 'checkIsFriend'. Either include it or remove the dependency array.",["361"],"'AiOutlineHome' is defined but never used.",["362"],"React Hook useEffect has missing dependencies: 'config' and 'user._id'. Either include them or remove the dependency array. If 'setNewRequests' needs the current value of 'user._id', you can also switch to useReducer instead of useState and read 'user._id' in the reducer.",["363"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setResults' needs the current value of 'users'.",["364"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'user.display_name' and 'user.first_name'. Either include them or remove the dependency array. If 'setDisplayName' needs the current value of 'user.first_name', you can also switch to useReducer instead of useState and read 'user.first_name' in the reducer.",["365"],"React Hook useEffect has missing dependencies: 'comment' and 'comments'. Either include them or remove the dependency array. If 'setReplies' needs the current value of 'comments', you can also switch to useReducer instead of useState and read 'comments' in the reducer.",["366"],"'useEffect' is defined but never used.","'ImageForm' is defined but never used.","React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.",["367"],"'GrDiamond' is defined but never used.","'Container' is defined but never used.","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","React Hook useEffect has a missing dependency: 'post_id'. Either include it or remove the dependency array.",["368"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ReplyCount' is defined but never used.","'BsArrow90DegDown' is defined but never used.","'ReplyForm' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.",["351"],["352"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'currentUser._id'. Either include it or remove the dependency array.",["369"],"no-global-assign","no-unsafe-negation",{"desc":"370","fix":"371"},{"desc":"370","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"373","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},"Update the dependencies array to be: [location, user]",{"range":"402","text":"403"},{"range":"404","text":"403"},"Update the dependencies array to be: [config]",{"range":"405","text":"406"},"Update the dependencies array to be: [posts, previewUser]",{"range":"407","text":"408"},"Update the dependencies array to be: [requests, user._id]",{"range":"409","text":"410"},"Update the dependencies array to be: [user._id, user.friends]",{"range":"411","text":"412"},"Update the dependencies array to be: [currentUser._id, requests, user._id]",{"range":"413","text":"414"},"Update the dependencies array to be: [config, currentUser, user_id]",{"range":"415","text":"416"},"Update the dependencies array to be: [checkIsFriend, currentUser, user]",{"range":"417","text":"418"},{"range":"419","text":"406"},"Update the dependencies array to be: [config, user._id]",{"range":"420","text":"421"},"Update the dependencies array to be: [query, users]",{"range":"422","text":"423"},"Update the dependencies array to be: [user.display_name, user.first_name]",{"range":"424","text":"425"},"Update the dependencies array to be: [comment, comments]",{"range":"426","text":"427"},"Update the dependencies array to be: [post._id]",{"range":"428","text":"429"},"Update the dependencies array to be: [post_id]",{"range":"430","text":"431"},"Update the dependencies array to be: [currentUser._id]",{"range":"432","text":"433"},[1107,1113],"[location, user]",[1315,1321],[2346,2348],"[config]",[2574,2587],"[posts, previewUser]",[2869,2879],"[requests, user._id]",[903,905],"[user._id, user.friends]",[3814,3824],"[currentUser._id, requests, user._id]",[4546,4559],"[config, currentUser, user_id]",[4703,4722],"[checkIsFriend, currentUser, user]",[3030,3032],[3247,3249],"[config, user._id]",[3654,3661],"[query, users]",[1689,1691],"[user.display_name, user.first_name]",[3217,3219],"[comment, comments]",[3258,3260],"[post._id]",[762,764],"[post_id]",[384,386],"[currentUser._id]"]